{"version":3,"sources":["components/AutoForm.js","config.js","App.js","index.js"],"names":["Spinner","loading","src","css","Message","status","text","className","MemoField","memo","field","onChange","label","attributes","type","AutoFormCSS","AutoForm","form","onSubmit","fieldsRef","useRef","useState","fields","map","name","value","setFields","updateFields","newFields","useEffect","current","handleChange","useCallback","e","target","getAttribute","config","messages","spinner","preventDefault","formData","reduce","key","disabled","buttonText","success","error","placeholder","required","ContainerCSS","App","setStatus","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7784249.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport React, { useState, useEffect, useCallback, memo, useRef } from 'react'\r\nimport { css, jsx } from '@emotion/core'\r\n\r\n/** @function Spinner */\r\nconst Spinner = ({ loading }) => {\r\n  return loading ? (\r\n    <img\r\n      src=\"https://i.imgur.com/01yMDgZ.gif\"\r\n      css={css`\r\n        height: 30px;\r\n        display: inline-block;\r\n        margin-left: 10px;\r\n      `}\r\n    />\r\n  ) : null\r\n}\r\n\r\n/** @function Message */\r\nconst Message = ({ status, text }) => {\r\n  return status && status !== 'loading' ? (\r\n    <div className={`message ${status}`}>{text}</div>\r\n  ) : null\r\n}\r\n\r\n/**\r\n * @function Field\r\n */\r\nconst Field = ({ field, onChange }) => {\r\n  const { label, ...attributes } = field\r\n\r\n  return (\r\n    <>\r\n      <label>{label}</label>\r\n      {(() => {\r\n        switch (attributes.type) {\r\n          case 'textarea':\r\n            return <textarea onChange={onChange} {...attributes} />\r\n          default:\r\n            return <input onChange={onChange} {...attributes} />\r\n        }\r\n      })()}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MemoField = memo(Field)\r\n\r\n/**\r\n * @function AutoForm\r\n */\r\nconst AutoForm = ({ form, onSubmit, status }) => {\r\n  const fieldsRef = useRef()\r\n\r\n  const [fields, setFields] = useState(\r\n    form.fields.map(field => ({\r\n      ...field,\r\n      name: field.name || field.label,\r\n      value: ''\r\n    }))\r\n  )\r\n\r\n  const updateFields = (name, value) => {\r\n    const newFields = fields.map(field => {\r\n      return field.name === name ? { ...field, value } : field\r\n    })\r\n    setFields(newFields)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fieldsRef.current = updateFields\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (status === 'success') {\r\n      setFields(fields.map(field => ({ ...field, value: '' })))\r\n    }\r\n  }, [status])\r\n\r\n  const handleChange = useCallback(e => {\r\n    const name = e.target.getAttribute('name')\r\n    const value = e.target.value\r\n\r\n    const update = () => {\r\n      fieldsRef.current(name, value)\r\n    }\r\n\r\n    update()\r\n  }, [])\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const formData = fields.reduce((fields, field) => {\r\n      return { ...fields, [field.name]: field.value }\r\n    }, {})\r\n\r\n    onSubmit(formData)\r\n  }\r\n\r\n  const { messages, spinner } = form.config\r\n\r\n  return (\r\n    <form css={AutoFormCSS} onSubmit={handleSubmit}>\r\n      {fields.map(field => (\r\n        <MemoField key={field.name} field={field} onChange={handleChange} />\r\n      ))}\r\n\r\n      <div className=\"form-bottom\">\r\n        <button disabled={status === 'success'} type=\"submit\">\r\n          {form.config.buttonText || 'Submit'}\r\n        </button>\r\n        <Spinner loading={status === 'loading' && spinner} />\r\n      </div>\r\n\r\n      <Message status={status} text={messages[status]} />\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AutoFormCSS = css`\r\n  width: 375px;\r\n  margin-left: 5px;\r\n\r\n  input, textarea {\r\n    display block;\r\n    width: 100%;\r\n    padding: .375rem .75rem;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: .25rem;\r\n    margin-bottom: .8rem;\r\n  }\r\n\r\n  label {\r\n    margin-bottom: .65rem;\r\n    display block;\r\n    padding-left: 2px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    letter-spacing: 0.75px;\r\n  }\r\n\r\n  textarea {\r\n    height: 125px;\r\n  }\r\n\r\n  button {\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    user-select: none;\r\n    border: 1px solid transparent;\r\n    padding: .55rem 1.5rem;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n    border-radius: .25rem;\r\n    color: #fff;\r\n    background-color: #FD6413;\r\n    cursor: pointer;\r\n  }\r\n\r\n  button:disabled {\r\n    background-color: #777;\r\n  }\r\n\r\n  .form-bottom {\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    button {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  .message {\r\n    position: relative;\r\n    padding: .75rem 1.25rem;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid transparent;\r\n    border-radius: .25rem;\r\n  }\r\n\r\n  .message.success {\r\n    color: #155724;\r\n    background-color: #d4edda;\r\n    border-color: #c3e6cb;\r\n  }\r\n\r\n  .message.error {\r\n    color: #721c24;\r\n    background-color: #f8d7da;\r\n    border-color: #f5c6cb;\r\n  }\r\n`\r\n\r\nexport default AutoForm\r\n","export default {\r\n  config: {\r\n    messages: {\r\n      success: 'We received your message! Thanks for inquiring.',\r\n      error:\r\n        'An error occurred during submittal. Please contact us at support@xyz.com'\r\n    },\r\n    buttonText: 'Send',\r\n    spinner: true\r\n  },\r\n  fields: [\r\n    {\r\n      label: 'Name',\r\n      placeholder: 'Dana Scully',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Location',\r\n      placeholder: 'New York, NY',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeholder: 'xyz@gmail.com',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Message',\r\n      type: 'textarea',\r\n      placeholder: 'Enter your message...',\r\n      required: true\r\n    }\r\n  ]\r\n}\r\n","/** @jsx jsx */\r\nimport React, { useState } from 'react'\r\nimport { css, jsx } from '@emotion/core'\r\nimport AutoForm from './components/AutoForm'\r\nimport config from './config'\r\n\r\nconst App = () => {\r\n  const [status, setStatus] = useState('')\r\n\r\n  const handleSubmit = form => {\r\n    setStatus('loading')\r\n\r\n    setTimeout(() => {\r\n      setStatus('success')\r\n    }, 3000)\r\n  }\r\n\r\n  return (\r\n    <div css={ContainerCSS}>\r\n      <h1>Get VIP Access</h1>\r\n      <AutoForm form={config} onSubmit={handleSubmit} status={status} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ContainerCSS = css`\r\n  padding: 125px 0 0 80px;\r\n\r\n  h1 {\r\n    color: #fff;\r\n    font-size: 56px;\r\n    margin: 0 0 15px;\r\n  }\r\n`\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}