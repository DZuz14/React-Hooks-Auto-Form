{"version":3,"sources":["components/AutoForm.js","forms/index.js","App.js","index.js"],"names":["Spinner","loading","src","css","Message","status","text","className","Field","field","onChange","attributes","label","type","AutoFormCSS","AutoForm","form","onSubmit","useState","fields","map","name","value","setFields","useEffect","handleChange","e","target","getAttribute","newFields","messages","config","preventDefault","formData","reduce","style","marginTop","disabled","buttonText","spinner","success","error","placeholder","required","App","setStatus","padding","console","log","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"q6DAMA,IAAMA,EAAU,SAAC,GACf,OAD+B,EAAdC,QAEf,mBACEC,IAAI,kCACJC,IAAKA,YAAF,OAMH,MAIAC,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACzB,OAAOD,GAAqB,YAAXA,EACf,mBAAKE,UAAS,kBAAaF,IAAWC,GACpC,MAMAE,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACJC,GAAeF,EAAzBG,MAD6B,YACJH,EADI,YAGrC,OACE,8BACE,yBAAQA,EAAMG,OACZ,WACA,OAAQH,EAAMI,MACZ,IAAK,WACH,OAAO,sCAAUH,SAAUA,GAAcC,IAC3C,QACE,OAAO,mCAAOD,SAAUA,GAAcC,KAL1C,KAmEFG,EAAcX,YAAH,KA6EFY,EAjIE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUZ,EAAa,EAAbA,OAAa,EACnBa,mBAC1BF,EAAKG,OAAOC,KAAI,SAAAX,GAAK,sBAChBA,EADgB,CAEnBY,KAAMZ,EAAMY,MAAQZ,EAAMG,MAC1BU,MAAO,SALoC,mBACxCH,EADwC,KAChCI,EADgC,KAS/CC,qBAAU,WACO,YAAXnB,GACFkB,EAAUJ,EAAOC,KAAI,SAAAX,GAAK,sBAAUA,EAAV,CAAiBa,MAAO,WACnD,CAACjB,IAEJ,IAAMoB,EAAe,SAAAC,GACnB,IAAML,EAAOK,EAAEC,OAAOC,aAAa,QAC7BC,EAAYV,EAAOC,KAAI,SAAAX,GAC3B,OAAOA,EAAMY,OAASA,EAAf,eAA2BZ,EAA3B,CAAkCa,MAAOI,EAAEC,OAAOL,QAAUb,KAErEc,EAAUM,IAaJC,EAAad,EAAKe,OAAlBD,SAER,OACE,oBAAM3B,IAAKW,EAAaG,SAbL,SAAAS,GACnBA,EAAEM,iBAEF,IAAMC,EAAWd,EAAOe,QAAO,SAACf,EAAQV,GACtC,OAAO,eAAKU,EAAZ,eAAqBV,EAAMY,KAAOZ,EAAMa,UACvC,IAEHL,EAASgB,KAONd,EAAOC,KAAI,SAAAX,GAAK,OACf,YAAC,EAAD,CAAOA,MAAOA,EAAOC,SAAUe,OAGjC,mBAAKU,MAAO,CAAEC,UAAW,SACvB,sBAAQC,SAAqB,YAAXhC,EAAsBQ,KAAK,UAC1CG,EAAKe,OAAOO,YAAc,UAG7B,YAAC,EAAD,CAASrC,QAAoB,YAAXI,IAClB,YAAC,EAAD,CAASA,OAAQA,EAAQC,KAAMwB,EAASzB,QChGjC,GACb0B,OAAQ,CACNO,WAAY,OACZC,SAAS,EACTT,SAAU,CACRU,QAAS,kDACTC,MACE,6EAGNtB,OAAQ,CACN,CACEP,MAAO,OACP8B,YAAa,cACbC,UAAU,GAEZ,CACE/B,MAAO,WACP8B,YAAa,aACbC,UAAU,GAEZ,CACE/B,MAAO,QACPC,KAAM,QACN6B,YAAa,gBACbC,UAAU,GAEZ,CACE/B,MAAO,UACPC,KAAM,WACN6B,YAAa,wBACbC,UAAU,KCDDC,EA1BH,WAAO,IAAD,EACY1B,mBAAS,MADrB,mBACTb,EADS,KACDwC,EADC,KAahB,OACE,yBACEV,MAAO,CACLW,QAAS,mBAGX,8CAEA,kBAAC,EAAD,CAAU9B,KAAMA,EAAMC,SAlBL,SAAAD,GACnB+B,QAAQC,IAAIhC,GACZ6B,EAAU,WAEVI,YAAW,WACTJ,EAAU,aAET,MAW6CxC,OAAQA,MCrB5D6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.47fca564.chunk.js","sourcesContent":["/* eslint-disable max-len */\r\n/** @jsx jsx */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { css, jsx } from '@emotion/core'\r\n\r\n/** @function Spinner */\r\nconst Spinner = ({ loading }) => {\r\n  return loading ? (\r\n    <img\r\n      src=\"https://i.imgur.com/01yMDgZ.gif\"\r\n      css={css`\r\n        height: 30px;\r\n        display: inline-block;\r\n        margin-left: 10px;\r\n      `}\r\n    />\r\n  ) : null\r\n}\r\n\r\n/** @function Message */\r\nconst Message = ({ status, text }) => {\r\n  return status && status !== 'loading' ? (\r\n    <div className={`message ${status}`}>{text}</div>\r\n  ) : null\r\n}\r\n\r\n/**\r\n * @function Field\r\n */\r\nconst Field = ({ field, onChange }) => {\r\n  const { label, ...attributes } = field\r\n\r\n  return (\r\n    <>\r\n      <label>{field.label}</label>\r\n      {(() => {\r\n        switch (field.type) {\r\n          case 'textarea':\r\n            return <textarea onChange={onChange} {...attributes} />\r\n          default:\r\n            return <input onChange={onChange} {...attributes} />\r\n        }\r\n      })()}\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n * @function AutoForm\r\n */\r\nconst AutoForm = ({ form, onSubmit, status }) => {\r\n  const [fields, setFields] = useState(\r\n    form.fields.map(field => ({\r\n      ...field,\r\n      name: field.name || field.label,\r\n      value: ''\r\n    }))\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (status === 'success')\r\n      setFields(fields.map(field => ({ ...field, value: '' })))\r\n  }, [status])\r\n\r\n  const handleChange = e => {\r\n    const name = e.target.getAttribute('name')\r\n    const newFields = fields.map(field => {\r\n      return field.name === name ? { ...field, value: e.target.value } : field\r\n    })\r\n    setFields(newFields)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const formData = fields.reduce((fields, field) => {\r\n      return { ...fields, [field.name]: field.value }\r\n    }, {})\r\n\r\n    onSubmit(formData)\r\n  }\r\n\r\n  const { messages } = form.config\r\n\r\n  return (\r\n    <form css={AutoFormCSS} onSubmit={handleSubmit}>\r\n      {fields.map(field => (\r\n        <Field field={field} onChange={handleChange} />\r\n      ))}\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        <button disabled={status === 'success'} type=\"submit\">\r\n          {form.config.buttonText || 'Submit'}\r\n        </button>\r\n\r\n        <Spinner loading={status === 'loading'} />\r\n        <Message status={status} text={messages[status]} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AutoFormCSS = css`\r\n  width: 420px;\r\n  margin-left: 5px;\r\n\r\n  input, textarea {\r\n    display block;\r\n    width: 100%;\r\n    padding: .375rem .75rem;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: .25rem;\r\n    margin-bottom: .8rem;\r\n  }\r\n\r\n  label {\r\n    margin-bottom: .5rem;\r\n    display block;\r\n    padding-left: 2px;\r\n    color: #fff;\r\n  }\r\n\r\n  textarea {\r\n    height: 100px;\r\n  }\r\n\r\n  button {\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    border: 1px solid transparent;\r\n    padding: .5rem 1.2rem;\r\n    font-size: 1.15rem;\r\n    line-height: 1.5;\r\n    border-radius: .25rem;\r\n    color: #fff;\r\n    background-color: #F10068;\r\n    cursor: pointer;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .message {\r\n    position: relative;\r\n    padding: .75rem 1.25rem;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid transparent;\r\n    border-radius: .25rem;\r\n  }\r\n\r\n  .message.loading {\r\n    color: #0c5460;\r\n    background-color: #d1ecf1;\r\n    border-color: #bee5eb;\r\n  }\r\n\r\n  .message.success {\r\n    color: #155724;\r\n    background-color: #d4edda;\r\n    border-color: #c3e6cb;\r\n  }\r\n\r\n  .message.error {\r\n    color: #721c24;\r\n    background-color: #f8d7da;\r\n    border-color: #f5c6cb;\r\n  }\r\n`\r\n\r\nexport default AutoForm\r\n","export default {\r\n  config: {\r\n    buttonText: 'Send',\r\n    spinner: true,\r\n    messages: {\r\n      success: 'We received your message! Thanks for inquiring.',\r\n      error:\r\n        'An error occurred during submittal. Please contact us at support@xyz.com'\r\n    }\r\n  },\r\n  fields: [\r\n    {\r\n      label: 'Name',\r\n      placeholder: 'Dana Scully',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Location',\r\n      placeholder: 'Boston, MA',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeholder: 'xyz@gmail.com',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Message',\r\n      type: 'textarea',\r\n      placeholder: 'Enter your message...',\r\n      required: true\r\n    }\r\n  ]\r\n}\r\n","import React, { useState } from 'react'\r\nimport AutoForm from './components/AutoForm'\r\nimport form from './forms'\r\n\r\nconst App = () => {\r\n  const [status, setStatus] = useState(null)\r\n\r\n  const handleSubmit = form => {\r\n    console.log(form)\r\n    setStatus('loading')\r\n\r\n    setTimeout(() => {\r\n      setStatus('success')\r\n      // setStatus('error')\r\n    }, 3000)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: '175px 0 0 80px'\r\n      }}\r\n    >\r\n      <h1>GET VIP ACCESS</h1>\r\n\r\n      <AutoForm form={form} onSubmit={handleSubmit} status={status} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}